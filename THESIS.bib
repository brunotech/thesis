
@inproceedings{DisCoPy,
  title = {{{DisCoPy}}: {{Monoidal Categories}} in {{Python}}},
  shorttitle = {{{DisCoPy}}},
  booktitle = {Proceedings {{ACT}} 2020},
  author = {{de Felice}, Giovanni and Toumi, Alexis and Coecke, Bob},
  year = {2021},
  publisher = {{EPTCS}},
  doi = {10.4204/EPTCS.333.13},
  abstract = {We introduce DisCoPy, an open source toolbox for computing with monoidal categories. The library provides an intuitive syntax for defining string diagrams and monoidal functors. Its modularity allows the efficient implementation of computational experiments in the various applications of category theory where diagrams have become a lingua franca. As an example, we used DisCoPy to perform natural language processing on quantum hardware for the first time.},
  file = {/Users/alexis.toumi/WORK/Zotero/storage/ZFD7K224/de Felice et al. - 2021 - DisCoPy Monoidal Categories in Python.pdf;/Users/alexis.toumi/WORK/Zotero/storage/AR69DYVP/2005.html},
  keywords = {Mathematics - Category Theory}
}

@inproceedings{MeichanetzidisEtAl20a,
  ids = {MeichanetzidisEtAl20},
  title = {Quantum {{Natural Language Processing}} on {{Near}}-{{Term Quantum Computers}}},
  booktitle = {Quantum {{Physics}} and {{Logic}} ({{QPL}})},
  author = {Meichanetzidis, Konstantinos and Gogioso, Stefano and De Felice, Giovanni and Chiappori, Nicol{\`o} and Toumi, Alexis and Coecke, Bob},
  year = {2020},
  abstract = {In this work, we describe a full-stack pipeline for natural language processing on near-term quantum computers, aka QNLP. The language modelling framework we employ is that of compositional distributional semantics (DisCoCat), which extends and complements the compositional structure of pregroup grammars. Within this model, the grammatical reduction of a sentence is interpreted as a diagram, encoding a specific interaction of words according to the grammar. It is this interaction which, together with a specific choice of word embedding, realises the meaning (or "semantics") of a sentence. Building on the formal quantum-like nature of such interactions, we present a method for mapping DisCoCat diagrams to quantum circuits. Our methodology is compatible both with NISQ devices and with established Quantum Machine Learning techniques, paving the way to near-term applications of quantum technology to natural language processing.},
  archiveprefix = {arXiv},
  copyright = {All rights reserved},
  eprint = {2005.04147},
  eprinttype = {arxiv},
  file = {/Users/alexis.toumi/WORK/Zotero/storage/5FUF9JMF/Meichanetzidis et al. - 2020 - Quantum Natural Language Processing on Near-Term Q.pdf;/Users/alexis.toumi/WORK/Zotero/storage/KCUELZGV/Meichanetzidis et al. - 2020 - Quantum Natural Language Processing on Near-Term Q.pdf;/Users/alexis.toumi/WORK/Zotero/storage/YL3H4IR4/Meichanetzidis et al. - 2020 - Quantum Natural Language Processing on Near-Term Q.pdf;/Users/alexis.toumi/WORK/Zotero/storage/2PPIAEI6/2005.html;/Users/alexis.toumi/WORK/Zotero/storage/JIK7K4E5/2005.html;/Users/alexis.toumi/WORK/Zotero/storage/NA5TLJV4/2005.html},
  keywords = {Computer Science - Computation and Language,Quantum Physics}
}

@article{ToumiEtAl21a,
  title = {Diagrammatic {{Differentiation}} for {{Quantum Machine Learning}}},
  author = {Toumi, Alexis and Yeung, Richie and {de Felice}, Giovanni},
  year = {2021},
  month = mar,
  abstract = {We introduce diagrammatic differentiation for tensor calculus by generalising the dual number construction from rigs to monoidal categories. Applying this to ZX diagrams, we show how to calculate diagrammatically the gradient of a linear map with respect to a phase parameter. For diagrams of parametrised quantum circuits, we get the well-known parameter-shift rule at the basis of many variational quantum algorithms. We then extend our method to the automatic differentation of hybrid classical-quantum circuits, using diagrams with bubbles to encode arbitrary non-linear operators. Moreover, diagrammatic differentiation comes with an open-source implementation in DisCoPy, the Python library for monoidal categories. Diagrammatic gradients of classical-quantum circuits can then be simplified using the PyZX library and executed on quantum hardware via the tket compiler. This opens the door to many practical applications harnessing both the structure of string diagrams and the computational power of quantum machine learning.},
  archiveprefix = {arXiv},
  eprint = {2103.07960},
  eprinttype = {arxiv},
  file = {/Users/alexis.toumi/WORK/Zotero/storage/X7N9SUKD/Toumi et al. - 2021 - Diagrammatic Differentiation for Quantum Machine L.pdf;/Users/alexis.toumi/WORK/Zotero/storage/IYC9WLNH/2103.html},
  journal = {arXiv:2103.07960 [quant-ph]},
  keywords = {Computer Science - Machine Learning,Mathematics - Category Theory,Quantum Physics},
  primaryclass = {quant-ph}
}


